#BlueJ class context
comment0.target=Part3
comment0.text=\r\n\ Write\ a\ description\ of\ Part3\ here.\r\n\ \r\n\ @author\ (Alessandrror)\ \r\n\ @version\ (No\ version.\ Thanks\ to\ Duke\ and\ Coursera)\r\n\ \r\n\ What\ does\ it\ the\ program\r\n\ \r\n\ Part\ 3\:\ Problem\ Solving\ with\ Strings\r\n\ This\ assignment\ will\ give\ you\ additional\ practice\ using\ String\ methods.\ \r\n\ You\ will\ write\ two\ methods\ to\ solve\ some\ problems\ using\ strings\ and\ a\ third\ method\ to\ test\ these\ two\ methods.\r\n\ \r\n\ Specifically,\ you\ should\ do\ the\ following\:\r\n\ \r\n\ 1.\ Create\ a\ new\ Java\ Class\ named\ Part3\ in\ the\ StringsFirstAssignments\ project.\ Put\ the\ following\ methods\ in\ this\ class.\r\n\ \r\n\ 2.\ Write\ the\ method\ named\ twoOccurrences\ that\ has\ two\ String\ parameters\ named\ stringa\ and\ stringb.\ \r\n\ This\ method\ returns\ true\ if\ stringa\ appears\ at\ least\ twice\ in\ stringb,\ otherwise\ it\ returns\ false.\ \r\n\ For\ example,\ the\ call\ twoOccurrences(\u201Cby\u201D,\ \u201CA\ story\ by\ Abby\ Long\u201D)\ returns\ true\ as\ there\ are\ two\ occurrences\ of\ \u201Cby\u201D,\ \r\n\ the\ call\ twoOccurrences(\u201Ca\u201D,\ \u201Cbanana\u201D)\ returns\ true\ as\ there\ are\ three\ occurrences\ of\ \u201Ca\u201D\ so\ \u201Ca\u201D\ occurs\ at\ least\ twice,\ \r\n\ and\ the\ call\ twoOccurrences(\u201Catg\u201D,\ \u201Cctgtatgta\u201D)\ returns\ false\ as\ there\ is\ only\ one\ occurence\ of\ \u201Catg\u201D.\r\n\ \r\n\ 3.\ Write\ the\ void\ method\ named\ testing\ that\ has\ no\ parameters.\ \r\n\ This\ method\ should\ call\ twoOccurrences\ on\ several\ pairs\ of\ strings\ and\ print\ the\ strings\ \r\n\ and\ the\ result\ of\ calling\ twoOccurrences\ (true\ or\ false)\ for\ each\ pair.\ \r\n\ Be\ sure\ to\ test\ examples\ that\ should\ result\ in\ true\ and\ examples\ that\ should\ result\ in\ false.\r\n\ \r\n\ 4.\ Write\ the\ method\ named\ lastPart\ that\ has\ two\ String\ parameters\ named\ stringa\ and\ stringb.\ \r\n\ This\ method\ finds\ the\ first\ occurrence\ of\ stringa\ in\ stringb,\ and\ returns\ the\ part\ of\ stringb\ that\ follows\ stringa.\ \r\n\ If\ stringa\ does\ not\ occur\ in\ stringb,\ then\ return\ stringb.\ \r\n\ For\ example,\ the\ call\ lastPart(\u201Can\u201D,\ \u201Cbanana\u201D)\ returns\ the\ string\ \u201Cana\u201D,\ the\ part\ of\ the\ string\ after\ the\ first\ \u201Can\u201D.\ \r\n\ The\ call\ lastPart(\u201Czoo\u201D,\ \u201Cforest\u201D)\ returns\ the\ string\ \u201Cforest\u201D\ since\ \u201Czoo\u201D\ does\ not\ appear\ in\ that\ word.\r\n\ \r\n\ 5.\ Add\ code\ to\ the\ method\ testing\ to\ call\ the\ method\ lastPart\ with\ several\ pairs\ of\ strings.\ \r\n\ For\ each\ call\ print\ the\ strings\ passed\ in\ and\ the\ result.\ For\ example,\ the\ output\ for\ the\ two\ calls\ above\ might\ be\:\r\n\ \r\n\ The\ part\ of\ the\ string\ after\ an\ in\ banana\ is\ ana.\r\n\ \r\n\ The\ part\ of\ the\ string\ after\ zoo\ in\ forest\ is\ forest.\r\n
comment1.params=stringa\ stringb
comment1.target=boolean\ twoOccurrences(java.lang.String,\ java.lang.String)
comment2.params=stringa\ stringb
comment2.target=java.lang.String\ lastPart(java.lang.String,\ java.lang.String)
comment3.params=
comment3.target=void\ testing()
comment4.params=args
comment4.target=void\ main(java.lang.String[])
numComments=5
